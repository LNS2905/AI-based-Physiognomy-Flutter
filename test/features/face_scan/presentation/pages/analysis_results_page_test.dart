import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:ai_based_physiognomy_flutter/features/face_scan/presentation/pages/analysis_results_page.dart';

void main() {
  group('AnalysisResultsPage', () {
    testWidgets('should only show annotated image when annotatedImagePath is provided', (WidgetTester tester) async {
      // Arrange
      const testAnnotatedImagePath = 'https://example.com/annotated.jpg';
      
      // Act
      await tester.pumpWidget(
        MaterialApp(
          home: AnalysisResultsPage(
            annotatedImagePath: testAnnotatedImagePath,
            reportImagePath: 'https://example.com/report.jpg', // N√†y s·∫Ω b·ªã b·ªè qua
          ),
        ),
      );
      
      // Wait for the widget to settle
      await tester.pumpAndSettle();
      
      // Assert
      // Ki·ªÉm tra c√≥ hi·ªÉn th·ªã ph·∫ßn "H√¨nh ·∫£nh ph√¢n t√≠ch"
      expect(find.text('H√¨nh ·∫£nh ph√¢n t√≠ch'), findsOneWidget);
      
      // Ki·ªÉm tra c√≥ hi·ªÉn th·ªã "·∫¢nh ƒë√°nh d·∫•u ƒë·∫∑c ƒëi·ªÉm"
      expect(find.text('·∫¢nh ƒë√°nh d·∫•u ƒë·∫∑c ƒëi·ªÉm'), findsOneWidget);
      
      // Ki·ªÉm tra KH√îNG hi·ªÉn th·ªã "B√°o c√°o chi ti·∫øt"
      expect(find.text('B√°o c√°o chi ti·∫øt'), findsNothing);
    });

    testWidgets('should not show images section when no annotatedImagePath', (WidgetTester tester) async {
      // Act
      await tester.pumpWidget(
        MaterialApp(
          home: AnalysisResultsPage(
            reportImagePath: 'https://example.com/report.jpg', // N√†y s·∫Ω b·ªã b·ªè qua
          ),
        ),
      );
      
      // Wait for the widget to settle
      await tester.pumpAndSettle();
      
      // Assert
      // Ki·ªÉm tra KH√îNG hi·ªÉn th·ªã ph·∫ßn "H√¨nh ·∫£nh ph√¢n t√≠ch"
      expect(find.text('H√¨nh ·∫£nh ph√¢n t√≠ch'), findsNothing);
    });

    testWidgets('should show analysis results page with basic elements', (WidgetTester tester) async {
      // Act
      await tester.pumpWidget(
        MaterialApp(
          home: AnalysisResultsPage(),
        ),
      );
      
      // Wait for the widget to settle
      await tester.pumpAndSettle();
      
      // Assert
      // Ki·ªÉm tra c√≥ hi·ªÉn th·ªã header v·ªõi title
      expect(find.text('üéØ Ph√¢n t√≠ch t∆∞·ªõng h·ªçc AI'), findsOneWidget);
      
      // Ki·ªÉm tra c√≥ hi·ªÉn th·ªã action buttons
      expect(find.text('L∆∞u k·∫øt qu·∫£'), findsOneWidget);
      expect(find.text('Chia s·∫ª'), findsOneWidget);
      expect(find.text('Ph√¢n t√≠ch l·∫°i'), findsOneWidget);
    });
  });
}
